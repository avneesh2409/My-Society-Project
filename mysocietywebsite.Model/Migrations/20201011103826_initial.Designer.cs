// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mysocietywebsite.Model.ApplicationDbContext;

namespace mysocietywebsite.Model.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201011103826_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("mysocietywebsite.Model.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("504b806b-d41f-4882-aa12-93d5d2b16301"),
                            CreatedBy = new Guid("504b806b-d41f-4882-aa12-93d5d2b16301"),
                            CreatedOn = new DateTime(2020, 10, 11, 10, 38, 25, 148, DateTimeKind.Utc).AddTicks(8426),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = new Guid("504b806b-d41f-4882-aa12-93d5d2b16301"),
                            ModifiedOn = new DateTime(2020, 10, 11, 10, 38, 25, 148, DateTimeKind.Utc).AddTicks(9383),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("mysocietywebsite.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("536d890f-49b8-4c5f-bfe3-2b16dca5f423"),
                            Address = "H.No - 30 Indus Town",
                            Contact = "9109072549",
                            CreatedBy = new Guid("536d890f-49b8-4c5f-bfe3-2b16dca5f423"),
                            CreatedOn = new DateTime(2020, 10, 11, 10, 38, 25, 150, DateTimeKind.Utc).AddTicks(6236),
                            Email = "tarun@gmail.com",
                            Fullname = "Tarunendra",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = new Guid("536d890f-49b8-4c5f-bfe3-2b16dca5f423"),
                            ModifiedOn = new DateTime(2020, 10, 11, 10, 38, 25, 150, DateTimeKind.Utc).AddTicks(6256),
                            Password = "123456789",
                            RoleId = new Guid("504b806b-d41f-4882-aa12-93d5d2b16301"),
                            Username = "AD"
                        });
                });

            modelBuilder.Entity("mysocietywebsite.Model.Entities.User", b =>
                {
                    b.HasOne("mysocietywebsite.Model.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
